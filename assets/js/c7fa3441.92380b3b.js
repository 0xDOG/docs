(self.webpackChunkuniswap=self.webpackChunkuniswap||[]).push([[1093],{4323:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),o={id:"inheritance-constructors",title:"Getting Started",sidebar_position:1},s=void 0,l={unversionedId:"guides/flash-integrations/inheritance-constructors",id:"version-V3/guides/flash-integrations/inheritance-constructors",isDocsHomePage:!1,title:"Getting Started",description:"In this guide, we will write a smart contract that calls flash on a V3 pool and swaps the full amount withdrawn of token0 and token1 in the corresponding pools with the same token pair - but different fee tiers. After the swap, the contract will pay back the first pool and transfer profits to the original calling address.",source:"@site/versioned_docs/version-V3/guides/flash-integrations/Inheritance-constructors.md",sourceDirName:"guides/flash-integrations",slug:"/guides/flash-integrations/inheritance-constructors",permalink:"/protocol/guides/flash-integrations/inheritance-constructors",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/versioned_docs/version-V3/guides/flash-integrations/Inheritance-constructors.md",version:"V3",sidebarPosition:1,frontMatter:{id:"inheritance-constructors",title:"Getting Started",sidebar_position:1},sidebar:"version-V3/mySidebar",previous:{title:"The Full Contract",permalink:"/protocol/guides/providing-liquidity/the-full-contract"},next:{title:"Calling Flash",permalink:"/protocol/guides/flash-integrations/calling-flash"}},c=[{value:"Flash Transactions Overview",id:"flash-transactions-overview",children:[]},{value:"The Flash Callback",id:"the-flash-callback",children:[]},{value:"Inheriting The V3 Contracts",id:"inheriting-the-v3-contracts",children:[]}],p={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this guide, we will write a smart contract that calls ",(0,i.kt)("inlineCode",{parentName:"p"},"flash")," on a V3 pool and swaps the full amount withdrawn of ",(0,i.kt)("inlineCode",{parentName:"p"},"token0")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"token1")," in the corresponding pools with the same token pair - but different fee tiers. After the swap, the contract will pay back the first pool and transfer profits to the original calling address."),(0,i.kt)("h2",{id:"flash-transactions-overview"},"Flash Transactions Overview"),(0,i.kt)("p",null,"Flash transactions are an approach to transferring tokens on Ethereum that transfer token balances ",(0,i.kt)("em",{parentName:"p"},"before")," the necessary conditions are met for those balances to be transferred. In the context of a swap, this would mean the output is sent from the swap before the input is received."),(0,i.kt)("p",null,"Uniswap V3 introduces a new function, ",(0,i.kt)("inlineCode",{parentName:"p"},"flash"),", within the Pool contract. ",(0,i.kt)("inlineCode",{parentName:"p"},"Flash")," withdraws a specified amount of both ",(0,i.kt)("inlineCode",{parentName:"p"},"token0")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"token1")," to the ",(0,i.kt)("inlineCode",{parentName:"p"},"recipient")," address. The withdrawn amount, plus the swap fees, will be due to the pool at the end of the transaction. ",(0,i.kt)("inlineCode",{parentName:"p"},"flash")," includes a fourth parameter, ",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", which allows the caller to abi.encode any necessary data to be passed through the function and decoded later."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external override lock noDelegateCall {\n")),(0,i.kt)("h2",{id:"the-flash-callback"},"The Flash Callback"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"flash")," will withdraw the tokens, but how are they paid back? To understand this, we must look inside the flash function code. midway through the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/uniswap-v3-core/blob/main/contracts/UniswapV3Pool.sol#L791"},(0,i.kt)("strong",{parentName:"a"},"flash"))," function, we see this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"IUniswapV3FlashCallback(msg.sender).uniswapV3FlashCallback(fee0, fee1, data);\n")),(0,i.kt)("p",null,"This step calls the ",(0,i.kt)("inlineCode",{parentName:"p"},"FlashCallback")," function on ",(0,i.kt)("inlineCode",{parentName:"p"},"msg.sender")," - which passes the fee data needed to calculate the balances due to the pool, as well as any data encoded into the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," parameter."),(0,i.kt)("p",null,"In V3 there are three separate callback functions, ",(0,i.kt)("inlineCode",{parentName:"p"},"uniswapV3SwapCallback"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"uniswapV3MintCallback"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"uniswapV3FlashCallback"),", each available to be overridden with custom logic. To write our arbitrage contract, we'll be calling ",(0,i.kt)("inlineCode",{parentName:"p"},"flash")," and overriding the ",(0,i.kt)("inlineCode",{parentName:"p"},"uniswapV3FlashCallback")," with the steps needed to finish executing our transaction."),(0,i.kt)("h2",{id:"inheriting-the-v3-contracts"},"Inheriting The V3 Contracts"),(0,i.kt)("p",null,"Inherit ",(0,i.kt)("inlineCode",{parentName:"p"},"IUniswapV3FlashCallback")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"PeripheryPayments"),", as we will use each in our program. Note these two inherited contracts already extend many other contracts that we will be using, such as ",(0,i.kt)("a",{parentName:"p",href:"https://docs.uniswap.org/reference/core/libraries/LowGasSafeMath"},"LowGasSafeMath")," which we ",(0,i.kt)("a",{parentName:"p",href:"https://docs.soliditylang.org/en/v0.7.6/contracts.html?highlight=using#using-for"},"attach"),", to types ",(0,i.kt)("inlineCode",{parentName:"p"},"uint256")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"int256"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"contract PairFlash is IUniswapV3FlashCallback, PeripheryPayments {\n    using LowGasSafeMath for uint256;\n    using LowGasSafeMath for int256;\n")),(0,i.kt)("p",null,"Declare an immutable public variable ",(0,i.kt)("inlineCode",{parentName:"p"},"swapRouter")," of type ",(0,i.kt)("inlineCode",{parentName:"p"},"ISwapRouter"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"    ISwapRouter public Immutable swapRouter;\n")),(0,i.kt)("p",null,"Declare the constructor here, which is executed once when the contract is deployed. Our constructor hardcodes the address of the V3 router, factory, and the address of weth9, the ",(0,i.kt)("a",{parentName:"p",href:"https://weth.io/"},"ERC-20 wrapper")," for ether."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"    constructor(\n        ISwapRouter _swapRouter,\n        address _factory,\n        address _WETH9\n    ) PeripheryImmutableState(_factory, _WETH9) {\n        swapRouter = _swapRouter;\n    }\n")),(0,i.kt)("p",null,"The full import section and contract declaration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"pragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol';\nimport '@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol';\n\nimport '@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol';\nimport '@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol';\nimport '@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol';\nimport '@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol';\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\n\n\n\ncontract PairFlash is IUniswapV3FlashCallback, PeripheryPayments {\n    using LowGasSafeMath for uint256;\n    using LowGasSafeMath for int256;\n\n    ISwapRouter public immutable swapRouter;\n\n    constructor(\n        ISwapRouter _swapRouter,\n        address _factory,\n        address _WETH9\n    ) PeripheryImmutableState(_factory, _WETH9) {\n        swapRouter = _swapRouter;\n    }\n")))}u.isMDXComponent=!0},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(n),d=r,f=h["".concat(l,".").concat(d)]||h[d]||u[d]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);