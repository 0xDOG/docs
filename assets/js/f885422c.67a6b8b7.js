(self.webpackChunkuniswap=self.webpackChunkuniswap||[]).push([[8491],{3338:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={},l=void 0,s={unversionedId:"reference/core/interfaces/pool/IUniswapV3PoolDerivedState",id:"version-V3/reference/core/interfaces/pool/IUniswapV3PoolDerivedState",isDocsHomePage:!1,title:"IUniswapV3PoolDerivedState",description:"Contains view functions to provide information about the pool that is computed rather than stored on the",source:"@site/versioned_docs/version-V3/reference/core/interfaces/pool/IUniswapV3PoolDerivedState.md",sourceDirName:"reference/core/interfaces/pool",slug:"/reference/core/interfaces/pool/IUniswapV3PoolDerivedState",permalink:"/protocol/reference/core/interfaces/pool/IUniswapV3PoolDerivedState",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/versioned_docs/version-V3/reference/core/interfaces/pool/IUniswapV3PoolDerivedState.md",version:"V3",frontMatter:{},sidebar:"version-V3/mySidebar",previous:{title:"IUniswapV3PoolActions",permalink:"/protocol/reference/core/interfaces/pool/IUniswapV3PoolActions"},next:{title:"IUniswapV3PoolEvents",permalink:"/protocol/reference/core/interfaces/pool/IUniswapV3PoolEvents"}},p=[{value:"Functions",id:"functions",children:[{value:"observe",id:"observe",children:[]},{value:"snapshotCumulativesInside",id:"snapshotcumulativesinside",children:[]}]}],c={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Contains view functions to provide information about the pool that is computed rather than stored on the\nblockchain. The functions here may have variable gas costs."),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"observe"},"observe"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function observe(\n    uint32[] secondsAgos\n  ) external view returns (int56[] tickCumulatives, uint160[] secondsPerLiquidityCumulativeX128s)\n")),(0,i.kt)("p",null,"Returns the cumulative tick and liquidity as of each timestamp ",(0,i.kt)("inlineCode",{parentName:"p"},"secondsAgo")," from the current block timestamp"),(0,i.kt)("p",null,"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\nthe beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\nyou must call it with secondsAgos = ","[3600, 0]",".\nThe time weighted average tick represents the geometric time weighted average price of the pool, in\nlog base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio."),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"secondsAgos")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint32[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"From how long ago each cumulative tick and liquidity value should be returned")))),(0,i.kt)("h4",{id:"return-values"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tickCumulatives")),(0,i.kt)("td",{parentName:"tr",align:"left"},"int56[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Cumulative tick values as of each ",(0,i.kt)("inlineCode",{parentName:"td"},"secondsAgos")," from the current block timestamp")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"secondsPerLiquidityCumulativeX128s")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint160[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Cumulative seconds per liquidity-in-range value as of each ",(0,i.kt)("inlineCode",{parentName:"td"},"secondsAgos")," from the current block")))),(0,i.kt)("p",null,"timestamp"),(0,i.kt)("h3",{id:"snapshotcumulativesinside"},"snapshotCumulativesInside"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function snapshotCumulativesInside(\n    int24 tickLower,\n    int24 tickUpper\n  ) external returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside)\n")),(0,i.kt)("p",null,"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"),(0,i.kt)("p",null,"Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\nI.e., snapshots cannot be compared if a position is not held for the entire period between when the first\nsnapshot is taken and the second snapshot is taken."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tickLower")),(0,i.kt)("td",{parentName:"tr",align:"left"},"int24"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lower tick of the range")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tickUpper")),(0,i.kt)("td",{parentName:"tr",align:"left"},"int24"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The upper tick of the range")))),(0,i.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tickCumulativeInside")),(0,i.kt)("td",{parentName:"tr",align:"left"},"int56"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The snapshot of the tick accumulator for the range")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"secondsPerLiquidityInsideX128")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint160"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The snapshot of seconds per liquidity for the range")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"secondsInside")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint32"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The snapshot of seconds per liquidity for the range")))))}d.isMDXComponent=!0},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);