(self.webpackChunkuniswap=self.webpackChunkuniswap||[]).push([[7812],{8534:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return l},default:function(){return c}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i={id:"pair",title:"Pair",tags:"sdk, documentation"},u=void 0,p={unversionedId:"reference/pair",id:"version-2.0.0/reference/pair",isDocsHomePage:!1,title:"Pair",description:"`typescript",source:"@site/SDK_versioned_docs/version-2.0.0/reference/03-pair.md",sourceDirName:"reference",slug:"/reference/pair",permalink:"/sdk/2.0.0/reference/pair",version:"2.0.0",sidebarPosition:3,frontMatter:{id:"pair",title:"Pair",tags:"sdk, documentation"},sidebar:"version-V2/sdksidebar",previous:{title:"Token",permalink:"/sdk/2.0.0/reference/token"},next:{title:"Route",permalink:"/sdk/2.0.0/reference/route"}},l=[{value:"getAddress",id:"getaddress",children:[]},{value:"liquidityToken",id:"liquiditytoken",children:[]},{value:"token0",id:"token0",children:[]},{value:"token1",id:"token1",children:[]},{value:"reserve0",id:"reserve0",children:[]},{value:"reserve1",id:"reserve1",children:[]},{value:"reserveOf",id:"reserveof",children:[]},{value:"getOutputAmount",id:"getoutputamount",children:[]},{value:"getInputAmount",id:"getinputamount",children:[]},{value:"getLiquidityMinted",id:"getliquidityminted",children:[]},{value:"getLiquidityValue",id:"getliquidityvalue",children:[]}],s={toc:l};function c(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"constructor(tokenAmountA: TokenAmount, tokenAmountB: TokenAmount)\n")),(0,a.kt)("p",null,"The Pair entity represents a Uniswap pair with a balance of each of its pair tokens."),(0,a.kt)("h1",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { ChainId, Token, TokenAmount, Pair } from "@uniswap/sdk";\n\nconst HOT = new Token(\n  ChainId.MAINNET,\n  "0xc0FFee0000000000000000000000000000000000",\n  18,\n  "HOT",\n  "Caffeine"\n);\nconst NOT = new Token(\n  ChainId.MAINNET,\n  "0xDeCAf00000000000000000000000000000000000",\n  18,\n  "NOT",\n  "Caffeine"\n);\n\nconst pair = new Pair(\n  new TokenAmount(HOT, "2000000000000000000"),\n  new TokenAmount(NOT, "1000000000000000000")\n);\n')),(0,a.kt)("h1",{id:"static-methods"},"Static Methods"),(0,a.kt)("h2",{id:"getaddress"},"getAddress"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAddress(tokenA: Token, tokenB: Token): string\n")),(0,a.kt)("p",null,"Computes the pair address for the passed ",(0,a.kt)("a",{parentName:"p",href:"token"},"Tokens"),". See ",(0,a.kt)("a",{parentName:"p",href:"../../../protocol/V2/guides/smart-contract-integration/getting-pair-addresses"},"Pair Addresses"),"."),(0,a.kt)("h1",{id:"properties"},"Properties"),(0,a.kt)("h2",{id:"liquiditytoken"},"liquidityToken"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"liquidityToken: Token;\n")),(0,a.kt)("p",null,"A Token representing the liquidity token for the pair. See ",(0,a.kt)("a",{parentName:"p",href:"../../../protocol/V2/reference/smart-contracts/pair-erc-20"},"Pair (ERC-20)"),"."),(0,a.kt)("h2",{id:"token0"},"token0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"token0: Token;\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"../../../protocol/V2/reference/smart-contracts/pair#token0"},"Token0"),"."),(0,a.kt)("h2",{id:"token1"},"token1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"token1: Token;\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"../../../protocol/V2/reference/smart-contracts/pair#token1"},"Token1"),"."),(0,a.kt)("h2",{id:"reserve0"},"reserve0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"reserve0: TokenAmount;\n")),(0,a.kt)("p",null,"The reserve of token0."),(0,a.kt)("h2",{id:"reserve1"},"reserve1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"reserve1: TokenAmount;\n")),(0,a.kt)("p",null,"The reserve of token1."),(0,a.kt)("h1",{id:"methods"},"Methods"),(0,a.kt)("h2",{id:"reserveof"},"reserveOf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"reserveOf(token: Token): TokenAmount\n")),(0,a.kt)("p",null,"Returns reserve0 or reserve1, depending on whether token0 or token1 is passed in."),(0,a.kt)("h2",{id:"getoutputamount"},"getOutputAmount"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getOutputAmount(inputAmount: TokenAmount): [TokenAmount, Pair]\n")),(0,a.kt)("p",null,"Pricing function for exact input amounts. Returns maximum output amount based on current reserves and the new Pair that would exist if the trade were executed."),(0,a.kt)("h2",{id:"getinputamount"},"getInputAmount"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getInputAmount(outputAmount: TokenAmount): [TokenAmount, Pair]\n")),(0,a.kt)("p",null,"Pricing function for exact output amounts. Returns minimum input amount based on current reserves and the new Pair that would exist if the trade were executed."),(0,a.kt)("h2",{id:"getliquidityminted"},"getLiquidityMinted"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getLiquidityMinted(totalSupply: TokenAmount, tokenAmountA: TokenAmount, tokenAmountB: TokenAmount): TokenAmount\n")),(0,a.kt)("p",null,"Calculates the exact amount of liquidity tokens minted from a given amount of token0 and token1."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"totalSupply must be looked up on-chain."),(0,a.kt)("li",{parentName:"ul"},"The value returned from this function ",(0,a.kt)("em",{parentName:"li"},"cannot")," be used as an input to getLiquidityValue.")),(0,a.kt)("h2",{id:"getliquidityvalue"},"getLiquidityValue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getLiquidityValue(\n  token: Token,\n  totalSupply: TokenAmount,\n  liquidity: TokenAmount,\n  feeOn: boolean = false,\n  kLast?: BigintIsh\n): TokenAmount\n")),(0,a.kt)("p",null,"Calculates the exact amount of token0 or token1 that the given amount of liquidity tokens represent."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"totalSupply must be looked up on-chain."),(0,a.kt)("li",{parentName:"ul"},"If the protocol charge is on, feeOn must be set to true, and kLast must be provided from an on-chain lookup."),(0,a.kt)("li",{parentName:"ul"},"Values returned from this function ",(0,a.kt)("em",{parentName:"li"},"cannot")," be used as inputs to getLiquidityMinted.")))}c.isMDXComponent=!0},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return k}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=l(n),k=o,m=d["".concat(p,".").concat(k)]||d[k]||c[k]||a;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);