(self.webpackChunkuniswap=self.webpackChunkuniswap||[]).push([[9752],{2455:function(t,e,a){"use strict";a.r(e),a.d(e,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return k},toc:function(){return p},default:function(){return m}});var n=a(2122),r=a(9756),i=(a(7294),a(3905)),l={},d=void 0,k={unversionedId:"reference/periphery/staker/interfaces/IUniswapV3Staker",id:"version-V3/reference/periphery/staker/interfaces/IUniswapV3Staker",isDocsHomePage:!1,title:"IUniswapV3Staker",description:"Allows staking nonfungible liquidity tokens in exchange for reward tokens",source:"@site/versioned_docs/version-V3/reference/periphery/staker/interfaces/IUniswapV3Staker.md",sourceDirName:"reference/periphery/staker/interfaces",slug:"/reference/periphery/staker/interfaces/IUniswapV3Staker",permalink:"/protocol/reference/periphery/staker/interfaces/IUniswapV3Staker",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/versioned_docs/version-V3/reference/periphery/staker/interfaces/IUniswapV3Staker.md",version:"V3",frontMatter:{},sidebar:"version-V3/mySidebar",previous:{title:"Uniswap V3 Staker Contract",permalink:"/protocol/reference/periphery/staker/UniswapV3Staker"},next:{title:"IncentiveId",permalink:"/protocol/reference/periphery/staker/libraries/IncentiveId"}},p=[{value:"Functions",id:"functions",children:[{value:"factory",id:"factory",children:[]},{value:"nonfungiblePositionManager",id:"nonfungiblepositionmanager",children:[]},{value:"maxIncentiveDuration",id:"maxincentiveduration",children:[]},{value:"maxIncentiveStartLeadTime",id:"maxincentivestartleadtime",children:[]},{value:"incentives",id:"incentives",children:[]},{value:"deposits",id:"deposits",children:[]},{value:"stakes",id:"stakes",children:[]},{value:"rewards",id:"rewards",children:[]},{value:"createIncentive",id:"createincentive",children:[]},{value:"endIncentive",id:"endincentive",children:[]},{value:"transferDeposit",id:"transferdeposit",children:[]},{value:"withdrawToken",id:"withdrawtoken",children:[]},{value:"stakeToken",id:"staketoken",children:[]},{value:"unstakeToken",id:"unstaketoken",children:[]},{value:"claimReward",id:"claimreward",children:[]},{value:"getRewardInfo",id:"getrewardinfo",children:[]}]},{value:"Events",id:"events",children:[{value:"IncentiveCreated",id:"incentivecreated",children:[]},{value:"IncentiveEnded",id:"incentiveended",children:[]},{value:"DepositTransferred",id:"deposittransferred",children:[]},{value:"TokenStaked",id:"tokenstaked",children:[]},{value:"TokenUnstaked",id:"tokenunstaked",children:[]},{value:"RewardClaimed",id:"rewardclaimed",children:[]}]}],o={toc:p};function m(t){var e=t.components,a=(0,r.Z)(t,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},o,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Allows staking nonfungible liquidity tokens in exchange for reward tokens"),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"factory"},"factory"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function factory(\n  ) external view returns (contract IUniswapV3Factory)\n")),(0,i.kt)("p",null,"The Uniswap V3 Factory"),(0,i.kt)("h3",{id:"nonfungiblepositionmanager"},"nonfungiblePositionManager"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function nonfungiblePositionManager(\n  ) external view returns (contract INonfungiblePositionManager)\n")),(0,i.kt)("p",null,"The nonfungible position manager with which this staking contract is compatible"),(0,i.kt)("h3",{id:"maxincentiveduration"},"maxIncentiveDuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function maxIncentiveDuration(\n  ) external view returns (uint256)\n")),(0,i.kt)("p",null,"The max duration of an incentive in seconds"),(0,i.kt)("h3",{id:"maxincentivestartleadtime"},"maxIncentiveStartLeadTime"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function maxIncentiveStartLeadTime(\n  ) external view returns (uint256)\n")),(0,i.kt)("p",null,"The max amount of seconds into the future the incentive startTime can be set"),(0,i.kt)("h3",{id:"incentives"},"incentives"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function incentives(\n    bytes32 incentiveId\n  ) external view returns (uint256 totalRewardUnclaimed, uint160 totalSecondsClaimedX128, uint96 numberOfStakes)\n")),(0,i.kt)("p",null,"Represents a staking incentive"),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"incentiveId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ID of the incentive computed from its parameters")))),(0,i.kt)("h4",{id:"return-values"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"totalRewardUnclaimed")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of reward token not yet claimed by users")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"totalSecondsClaimedX128")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint160"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Total liquidity-seconds claimed, represented as a UQ32.128")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"numberOfStakes")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint96"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The count of deposits that are currently staked for the incentive")))),(0,i.kt)("h3",{id:"deposits"},"deposits"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function deposits(\n  ) external view returns (address owner, uint48 numberOfStakes, int24 tickLower, int24 tickUpper)\n")),(0,i.kt)("p",null,"Returns information about a deposited NFT"),(0,i.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"owner")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The owner of the deposited NFT")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"numberOfStakes")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint48"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Counter of how many incentives for which the liquidity is staked")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tickLower")),(0,i.kt)("td",{parentName:"tr",align:"left"},"int24"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The lower tick of the range")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tickUpper")),(0,i.kt)("td",{parentName:"tr",align:"left"},"int24"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The upper tick of the range")))),(0,i.kt)("h3",{id:"stakes"},"stakes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function stakes(\n    uint256 tokenId,\n    bytes32 incentiveId\n  ) external view returns (uint160 secondsPerLiquidityInsideInitialX128, uint128 liquidity)\n")),(0,i.kt)("p",null,"Returns information about a staked liquidity NFT"),(0,i.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ID of the staked token")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"incentiveId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ID of the incentive for which the token is staked")))),(0,i.kt)("h4",{id:"return-values-2"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"secondsPerLiquidityInsideInitialX128")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint160"),(0,i.kt)("td",{parentName:"tr",align:"left"},"secondsPerLiquidity represented as a UQ32.128")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"liquidity")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint128"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of liquidity in the NFT as of the last time the rewards were computed")))),(0,i.kt)("h3",{id:"rewards"},"rewards"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rewards(\n    contract IERC20Minimal rewardToken,\n    address owner\n  ) external view returns (uint256 rewardsOwed)\n")),(0,i.kt)("p",null,"Returns amounts of reward tokens owed to a given address according to the last time all stakes were updated"),(0,i.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rewardToken")),(0,i.kt)("td",{parentName:"tr",align:"left"},"contract IERC20Minimal"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The token for which to check rewards")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"owner")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The owner for which the rewards owed are checked")))),(0,i.kt)("h4",{id:"return-values-3"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rewardsOwed")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of the reward token claimable by the owner")))),(0,i.kt)("h3",{id:"createincentive"},"createIncentive"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function createIncentive(\n    struct IUniswapV3Staker.IncentiveKey key,\n    uint256 reward\n  ) external\n")),(0,i.kt)("p",null,"Creates a new liquidity mining incentive program"),(0,i.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"key")),(0,i.kt)("td",{parentName:"tr",align:"left"},"struct IUniswapV3Staker.IncentiveKey"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Details of the incentive to create")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"reward")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of reward tokens to be distributed")))),(0,i.kt)("h3",{id:"endincentive"},"endIncentive"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function endIncentive(\n    struct IUniswapV3Staker.IncentiveKey key\n  ) external returns (uint256 refund)\n")),(0,i.kt)("p",null,"Ends an incentive after the incentive end time has passed and all stakes have been withdrawn"),(0,i.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"key")),(0,i.kt)("td",{parentName:"tr",align:"left"},"struct IUniswapV3Staker.IncentiveKey"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Details of the incentive to end")))),(0,i.kt)("h4",{id:"return-values-4"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refund")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The remaining reward tokens when the incentive is ended")))),(0,i.kt)("h3",{id:"transferdeposit"},"transferDeposit"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function transferDeposit(\n    uint256 tokenId,\n    address to\n  ) external\n")),(0,i.kt)("p",null,"Transfers ownership of a deposit from the sender to the given recipient"),(0,i.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ID of the token (and the deposit) to transfer")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"to")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The new owner of the deposit")))),(0,i.kt)("h3",{id:"withdrawtoken"},"withdrawToken"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function withdrawToken(\n    uint256 tokenId,\n    address to,\n    bytes data\n  ) external\n")),(0,i.kt)("p",null,"Withdraws a Uniswap V3 LP token ",(0,i.kt)("inlineCode",{parentName:"p"},"tokenId")," from this contract to the recipient ",(0,i.kt)("inlineCode",{parentName:"p"},"to")),(0,i.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The unique identifier of an Uniswap V3 LP token")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"to")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The address where the LP token will be sent")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},"bytes"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An optional data array that will be passed along to the ",(0,i.kt)("inlineCode",{parentName:"td"},"to")," address via the NFT safeTransferFrom")))),(0,i.kt)("h3",{id:"staketoken"},"stakeToken"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function stakeToken(\n    struct IUniswapV3Staker.IncentiveKey key,\n    uint256 tokenId\n  ) external\n")),(0,i.kt)("p",null,"Stakes a Uniswap V3 LP token"),(0,i.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"key")),(0,i.kt)("td",{parentName:"tr",align:"left"},"struct IUniswapV3Staker.IncentiveKey"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The key of the incentive for which to stake the NFT")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ID of the token to stake")))),(0,i.kt)("h3",{id:"unstaketoken"},"unstakeToken"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function unstakeToken(\n    struct IUniswapV3Staker.IncentiveKey key,\n    uint256 tokenId\n  ) external\n")),(0,i.kt)("p",null,"Unstakes a Uniswap V3 LP token"),(0,i.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"key")),(0,i.kt)("td",{parentName:"tr",align:"left"},"struct IUniswapV3Staker.IncentiveKey"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The key of the incentive for which to unstake the NFT")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ID of the token to unstake")))),(0,i.kt)("h3",{id:"claimreward"},"claimReward"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function claimReward(\n    contract IERC20Minimal rewardToken,\n    address to,\n    uint256 amountRequested\n  ) external returns (uint256 reward)\n")),(0,i.kt)("p",null,"Transfers ",(0,i.kt)("inlineCode",{parentName:"p"},"amountRequested")," of accrued ",(0,i.kt)("inlineCode",{parentName:"p"},"rewardToken")," rewards from the contract to the recipient ",(0,i.kt)("inlineCode",{parentName:"p"},"to")),(0,i.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rewardToken")),(0,i.kt)("td",{parentName:"tr",align:"left"},"contract IERC20Minimal"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The token being distributed as a reward")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"to")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The address where claimed rewards will be sent to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"amountRequested")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of reward tokens to claim. Claims entire reward amount if set to 0.")))),(0,i.kt)("h4",{id:"return-values-5"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"reward")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of reward tokens claimed")))),(0,i.kt)("h3",{id:"getrewardinfo"},"getRewardInfo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getRewardInfo(\n    struct IUniswapV3Staker.IncentiveKey key,\n    uint256 tokenId\n  ) external returns (uint256 reward, uint160 secondsInsideX128)\n")),(0,i.kt)("p",null,"Calculates the reward amount that will be received for the given stake"),(0,i.kt)("h4",{id:"parameters-10"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"key")),(0,i.kt)("td",{parentName:"tr",align:"left"},"struct IUniswapV3Staker.IncentiveKey"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The key of the incentive")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ID of the token")))),(0,i.kt)("h4",{id:"return-values-6"},"Return Values:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"reward")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The reward accrued to the NFT for the given incentive thus far")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"secondsInsideX128")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint160"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The seconds inside the tick range")))),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("h3",{id:"incentivecreated"},"IncentiveCreated"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  event IncentiveCreated(\n    contract IERC20Minimal rewardToken,\n    contract IUniswapV3Pool pool,\n    uint256 startTime,\n    uint256 endTime,\n    address refundee,\n    uint256 reward\n  )\n")),(0,i.kt)("p",null,"Event emitted when a liquidity mining incentive has been created"),(0,i.kt)("h4",{id:"parameters-11"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rewardToken")),(0,i.kt)("td",{parentName:"tr",align:"left"},"contract IERC20Minimal"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The token being distributed as a reward")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"pool")),(0,i.kt)("td",{parentName:"tr",align:"left"},"contract IUniswapV3Pool"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Uniswap V3 pool")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"startTime")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The time when the incentive program begins")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"endTime")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The time when rewards stop accruing")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refundee")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The address which receives any remaining reward tokens after the end time")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"reward")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of reward tokens to be distributed")))),(0,i.kt)("h3",{id:"incentiveended"},"IncentiveEnded"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  event IncentiveEnded(\n    bytes32 incentiveId,\n    uint256 refund\n  )\n")),(0,i.kt)("p",null,"Event that can be emitted when a liquidity mining incentive has ended"),(0,i.kt)("h4",{id:"parameters-12"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"incentiveId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The incentive which is ending")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refund")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of reward tokens refunded")))),(0,i.kt)("h3",{id:"deposittransferred"},"DepositTransferred"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  event DepositTransferred(\n    uint256 tokenId,\n    address oldOwner,\n    address newOwner\n  )\n")),(0,i.kt)("p",null,"Emitted when ownership of a deposit changes"),(0,i.kt)("h4",{id:"parameters-13"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The ID of the deposit (and token) that is being transferred")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"oldOwner")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The owner before the deposit was transferred")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"newOwner")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The owner after the deposit was transferred")))),(0,i.kt)("h3",{id:"tokenstaked"},"TokenStaked"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  event TokenStaked(\n    uint256 tokenId,\n    bytes32 liquidity,\n    uint128 incentiveId\n  )\n")),(0,i.kt)("p",null,"Event emitted when a Uniswap V3 LP token has been staked"),(0,i.kt)("h4",{id:"parameters-14"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The unique identifier of an Uniswap V3 LP token")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"liquidity")),(0,i.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of liquidity staked")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"incentiveId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint128"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The incentive in which the token is staking")))),(0,i.kt)("h3",{id:"tokenunstaked"},"TokenUnstaked"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  event TokenUnstaked(\n    uint256 tokenId,\n    bytes32 incentiveId\n  )\n")),(0,i.kt)("p",null,"Event emitted when a Uniswap V3 LP token has been unstaked"),(0,i.kt)("h4",{id:"parameters-15"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The unique identifier of an Uniswap V3 LP token")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"incentiveId")),(0,i.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The incentive in which the token is staking")))),(0,i.kt)("h3",{id:"rewardclaimed"},"RewardClaimed"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  event RewardClaimed(\n    address to,\n    uint256 reward\n  )\n")),(0,i.kt)("p",null,"Event emitted when a reward token has been claimed"),(0,i.kt)("h4",{id:"parameters-16"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"to")),(0,i.kt)("td",{parentName:"tr",align:"left"},"address"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The address where claimed rewards were sent to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"reward")),(0,i.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The amount of reward tokens claimed")))))}m.isMDXComponent=!0},3905:function(t,e,a){"use strict";a.d(e,{Zo:function(){return o},kt:function(){return N}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var k=n.createContext({}),p=function(t){var e=n.useContext(k),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},o=function(t){var e=p(t.components);return n.createElement(k.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,k=t.parentName,o=d(t,["components","mdxType","originalType","parentName"]),s=p(a),N=r,f=s["".concat(k,".").concat(N)]||s[N]||m[N]||i;return a?n.createElement(f,l(l({ref:e},o),{},{components:a})):n.createElement(f,l({ref:e},o))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=s;var d={};for(var k in e)hasOwnProperty.call(e,k)&&(d[k]=e[k]);d.originalType=t,d.mdxType="string"==typeof t?t:r,l[1]=d;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"}}]);